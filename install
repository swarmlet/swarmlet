#!/usr/bin/env bash

cat << EOM
——————————————————————————————————————————————————————————————————————————

      _______ _  _  _ _______  ______ _______        _______ _______
      |______ |  |  | |_____| |_____/ |  |  | |      |______    |
      ______| |__|__| |     | |    \  |  |  | |_____ |______    |


       Description:  A small tool to manage swarm deployments,
                     load balancing, SSL, metrics and more.
       Version:      *TODO*
       Author:       Tjerk Woudsma <tjerk@passionatepeople.io>
       Website:      https://swarmlet.dev

——————————————————————————————————————————————————————————————————————————
       Thank you for installing Swarmlet!

EOM

FPREFIX="=====>"
PREFIX="----->"
INDENT="      "

REPOSITORY="https://github.com/swarmlet/swarmlet.git"
DEPENDENCIES=(git apt-transport-https apache2-utils moreutils)
SWARMLET_INSTALL_ROOT="/opt/swarmlet"

if [ "${BASH_VERSINFO:-0}" -lt 4 ]; then
  echo "$PREFIX [ERROR] Unmet requirements: Bash 4"
  echo "$INDENT Your Bash version is $BASH_VERSION"
  echo "$PREFIX Exiting with error code 1" 1>&2
  exit 1
fi

declare -A DEFAULT_OPTS=(
  [DOMAIN]="$HOSTNAME"      # (defaults to server hostname) Recommended to replace this with the domain you are going to use
  [DEBUG]=                  # (default undefined) Run installation in debug mode
  [CREATE_SWAP]=false       # (default false) Allocate 1GB of swap space
  [SKIP_METRICS]=false      # (default false) Skip installation of Swarmpit and Swarmprom
  [SKIP_SWARMPIT]=false     # (default false) Skip installation of Swarmpit
  [SKIP_SWARMPROM]=false    # (default false) Skip installation of Swarmprom
  [MINIMAL_INSTALL]=false   # (default false) Use the minimal installation method
)

# Set default environment variables
for KEY in "${!DEFAULT_OPTS[@]}"; do
  [ ! -z "${DEFAULT_OPTS[$KEY]}" ] && export "$KEY=${DEFAULT_OPTS[$KEY]}";
done

# Set environment variables from arguments if given
shopt -s extglob
while [[ "$#" > 0 ]]; do case "${1%=*}" in
  @($(echo ${!DEFAULT_OPTS[@]} | sed 's/ /|/g'))) export "$1"; shift ;;
  *) echo "Unknown argument: $1"; shift ;;
esac; done

set -eo pipefail; [[ $DEBUG ]] && set -x

install() {
  echo "$PREFIX Installing Swarmlet"
  echo "$PREFIX Installing dependencies"
  apt-get update -y -qq
  apt-get install -y -qq "${DEPENDENCIES[@]}"
  wget -nv -O - https://get.docker.com/ | sh
  curl -fsSL "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  chmod +x /usr/local/bin/docker-compose

  echo "$PREFIX Cloning Swarmlet from $REPOSITORY"
  # mkdir -p $SWARMLET_INSTALL_ROOT; cp -R $(dirname "$0")/* $SWARMLET_INSTALL_ROOT/
  git clone -q $REPOSITORY $SWARMLET_INSTALL_ROOT

  echo "$PREFIX Linking executable"
  ln -s $SWARMLET_INSTALL_ROOT/swarmlet /usr/local/sbin/

  echo "$PREFIX Initializing Swarmlet"
  swarmlet init "$@"

  echo "$PREFIX Installation complete"
  # TODO: get from compose files and handle no domain
  echo "$FPREFIX Swarmlet services stacks deployed"
  echo -e "\n$PREFIX Check the docs on how to set up a custom domain name"
  echo "$INDENT https://swarmlet.dev/docs/getting-started/introduction"
  echo "$PREFIX Please wait a minute or two for Traefik to initialize..."
  echo "$INDENT Follow the logs using:"
  echo "$INDENT $ swarmlet logs loadbalancer_traefik -f"
}

minimal-install() {
  echo "$PREFIX Installing minimal Swarmlet"

  echo "$PREFIX Cloning Swarmlet from $REPOSITORY"
  git clone -q $REPOSITORY $SWARMLET_INSTALL_ROOT

  echo "$PREFIX Linking executable"
  ln -s $SWARMLET_INSTALL_ROOT/swarmlet /usr/local/sbin/

  echo "$PREFIX Initializing minimal Swarmlet"
  swarmlet minimal-init "$@"

  echo "$PREFIX Installation complete"
}

if [ "$MINIMAL_INSTALL" = true ]; then
  minimal-install
else
  install
fi;
